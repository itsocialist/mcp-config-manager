{
  "name": "mcp-config-manager",
  "version": "0.1.4",
  "description": "The visual command center for AI tool configuration. Stop wrestling with JSON - start managing MCP servers visually across Claude, VS Code, and more.",
  "main": "dist/main/main.js",
  "homepage": "https://github.com/itsocialist/mcp-config-manager",
  "repository": {
    "type": "git",
    "url": "https://github.com/itsocialist/mcp-config-manager.git"
  },
  "bugs": {
    "url": "https://github.com/itsocialist/mcp-config-manager/issues"
  },
  "scripts": {
    "dev": "concurrently \"npm run dev:renderer\" \"npm run dev:main\"",
    "dev:renderer": "vite",
    "dev:main": "tsc -p tsconfig.main.json && electron dist/main/main.js --dev",
    "build": "npm run build:renderer && npm run build:main",
    "build:renderer": "vite build",
    "build:main": "tsc -p tsconfig.main.json",
    "electron:dev": "concurrently \"npm run dev:renderer\" \"wait-on http://localhost:5175 && npm run dev:main\"",
    "electron:pack": "npm run build && electron-builder --dir",
    "electron:dist": "npm run build && electron-builder",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:e2e": "jest --config jest.e2e.config.js",
    "lint": "eslint src --ext .ts,.tsx",
    "lint:fix": "eslint src --ext .ts,.tsx --fix",
    "format": "prettier --write \"src/**/*.{ts,tsx,json}\"",
    "type-check": "tsc --noEmit"
  },
  "keywords": [
    "mcp",
    "model-context-protocol",
    "configuration",
    "claude",
    "ai-tools",
    "electron",
    "react",
    "typescript",
    "developer-tools",
    "ai-development",
    "json-editor",
    "visual-configuration"
  ],
  "author": {
    "name": "Brian Dawson",
    "email": "brian@mcptools.dev",
    "url": "https://github.com/itsocialist"
  },
  "license": "MIT",
  "devDependencies": {
    "@playwright/test": "^1.55.0",
    "@testing-library/jest-dom": "^6.1.4",
    "@testing-library/react": "^14.1.2",
    "@types/fs-extra": "^11.0.4",
    "@types/jest": "^29.5.8",
    "@types/json5": "^2.2.0",
    "@types/node": "^20.9.0",
    "@types/react": "^18.2.37",
    "@types/react-dom": "^18.2.15",
    "@typescript-eslint/eslint-plugin": "^6.11.0",
    "@typescript-eslint/parser": "^6.11.0",
    "@vitejs/plugin-react": "^4.1.1",
    "autoprefixer": "^10.4.21",
    "chrome-remote-interface": "^0.33.3",
    "concurrently": "^8.2.2",
    "daisyui": "^5.1.10",
    "electron": "^28.0.0",
    "electron-builder": "^24.6.4",
    "eslint": "^8.54.0",
    "eslint-plugin-react": "^7.33.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "jest": "^29.7.0",
    "jest-environment-jsdom": "^29.7.0",
    "playwright": "^1.55.0",
    "postcss": "^8.5.6",
    "prettier": "^3.1.0",
    "puppeteer": "^24.21.0",
    "puppeteer-core": "^24.20.0",
    "puppeteer-in-electron": "^3.0.5",
    "tailwindcss": "^3.4.17",
    "ts-jest": "^29.1.1",
    "typescript": "^5.2.2",
    "vite": "^5.0.0",
    "wait-on": "^7.2.0"
  },
  "dependencies": {
    "@dnd-kit/core": "^6.3.1",
    "@dnd-kit/sortable": "^10.0.0",
    "@dnd-kit/utilities": "^3.2.2",
    "@floating-ui/react": "^0.27.16",
    "@iarna/toml": "^2.2.5",
    "@monaco-editor/react": "^4.6.0",
    "@react-spring/web": "^10.0.2",
    "@xyflow/react": "^12.8.4",
    "antd": "^5.11.5",
    "chokidar": "^3.5.3",
    "fs-extra": "^11.1.1",
    "json5": "^2.2.3",
    "node-fetch": "^2.7.0",
    "react": "^18.2.0",
    "react-dom": "^18.2.0",
    "react-router-dom": "^7.8.2",
    "zod": "^4.1.5",
    "zustand": "^4.4.6"
  },
  "build": {
    "appId": "com.mcptools.config-manager",
    "productName": "MCP Configuration Manager",
    "directories": {
      "output": "release"
    },
    "files": [
      "dist/**/*",
      "!dist/**/*.map",
      "package.json"
    ],
    "mac": {
      "category": "public.app-category.developer-tools",
      "target": {
        "target": "dmg",
        "arch": [
          "arm64",
          "x64"
        ]
      },
      "icon": "assets/icons/icon-512.png",
      "hardenedRuntime": false,
      "gatekeeperAssess": false,
      "entitlements": "build/entitlements.mac.plist",
      "entitlementsInherit": "build/entitlements.mac.plist",
      "signIgnore": [
        "node_modules"
      ],
      "type": "distribution"
    },
    "win": {
      "target": "nsis",
      "icon": "assets/icons/icon-256.png"
    },
    "linux": {
      "target": "AppImage",
      "icon": "assets/icons/icon-512.png"
    }
  }
}
